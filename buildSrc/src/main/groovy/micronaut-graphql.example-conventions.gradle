plugins {
    id "com.github.johnrengelman.shadow"
    id("io.micronaut.application")
}

group "io.micronaut.example"
version project.projectVersion

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:${micronautVersion}")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation platform("io.micronaut:micronaut-bom:${micronautVersion}")
    implementation(project(":graphql"))
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")

    implementation platform("io.micronaut:micronaut-bom:${micronautVersion}")
    implementation("io.micronaut:micronaut-inject-java")

    implementation platform("io.micronaut:micronaut-bom:${micronautVersion}")
    implementation("ch.qos.logback:logback-classic")
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

mainClassName = "example.Application"

run.jvmArgs("-noverify", "-XX:TieredStopAtLevel=1")

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

micronautBuild {
    resolutionStrategy {
        force "com.graphql-java:graphql-java-extended-scalars:2022-07-24T22-44-12-313b221"
        force "com.graphql-java:graphql-java:$graphqlJavaVersion"
    }
}
